/* auto-generated by NAPI-RS */
/* eslint-disable */
export declare function callCtx(): FlatDebugNode

/** Flattened version of CallTraceStep for napi compatibility */
export interface FlatCallTraceStep {
  /** Call depth */
  depth: number
  /** Program counter before step execution */
  pc: number
  /** Opcode as string (u8 value) */
  op: string
  /** Current contract address as hex string */
  contract: string
  /** Stack before step execution as hex strings */
  stack?: Array<string>
  /** The new stack items placed by this step as hex strings */
  pushStack?: Array<string>
  /** Memory before step execution as hex string */
  memory?: string
  /** Returndata before step execution as hex string */
  returndata: string
  /** Remaining gas before step execution */
  gasRemaining: number
  /** Gas refund counter before step execution */
  gasRefundCounter: number
  /** Total gas used before step execution */
  gasUsed: number
  /** Gas cost of step execution */
  gasCost: number
  /** Change of the contract state after step execution (flattened) */
  storageChange?: FlatStorageChange
  /** Final status of the step as string */
  status?: number
  /** Immediate bytes of the step as hex string */
  immediateBytes?: string
  /** Optional complementary decoded step data (flattened) */
  decoded?: FlatDecodedTraceStep
}

/** Flattened version of DebugNode for napi compatibility */
export interface FlatDebugNode {
  /** Execution context address as hex string */
  address: string
  /** The kind of call as string representation */
  kind: string
  /** Calldata as hex string */
  calldata: string
  /** The debug steps (flattened) */
  steps: Array<FlatCallTraceStep>
}

/** Flattened version of DecodedInternalCall for napi compatibility */
export interface FlatDecodedInternalCall {
  /** Name of the internal function */
  funcName: string
  /** Input arguments of the internal function */
  args?: Array<string>
  /** Optional decoded return data */
  returnData?: Array<string>
}

/** Flattened version of DecodedTraceStep for napi compatibility */
export type FlatDecodedTraceStep =
  | { type: 'InternalCall', decodedInternalCall: FlatDecodedInternalCall, callIdx: number }
  | { type: 'Line', field0: string }

/** Flattened version of StorageChange for napi compatibility */
export interface FlatStorageChange {
  /** Key of the storage slot as hex string */
  key: string
  /** Current value of the storage slot as hex string */
  value: string
  /** The previous value of the storage slot as hex string */
  hadValue?: string
  /** How this storage was accessed as string */
  reason: string
}

export declare function init(path: string): void

export declare function opcodeList(): Array<string>

export declare function step(): void

export declare function stepBack(): void

export declare function test(): string
